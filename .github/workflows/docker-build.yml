name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test compilation
      run: |
        # Create test file
        mkdir -p test
        cat > test/hello.c << 'EOF'
        #include <stdio.h>

        int main() {
            printf("Hello from MSVC 6.0!\n");
            return 0;
        }
        EOF

        # Make compile script executable
        chmod +x compile.sh

        # Test basic compilation
        ./compile.sh -i test/hello.c -o test/hello.obj -v

        # Verify output file was created
        if [ ! -f test/hello.obj ]; then
          echo "Error: Output file was not created"
          exit 1
        fi

        # Test syntax check (no output)
        ./compile.sh -i test/hello.c /W4

        # Test stdin compilation
        cat test/hello.c | ./compile.sh -i - -o test/hello2.obj

        # Verify stdin output
        if [ ! -f test/hello2.obj ]; then
          echo "Error: Stdin output file was not created"
          exit 1
        fi

        echo "All tests passed!"
        ls -lh test/*.obj
